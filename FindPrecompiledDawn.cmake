# - Try to find precompiled libwebgpu_dawn
# Once done this will define
#  PRECOMPILED_DAWN_FOUND - System has precompiled libwebgpu_dawn
#  PRECOMPILED_DAWN_INCLUDE_DIRS - The precompiled libwebgpu_dawn include directories
#  PRECOMPILED_DAWN_LIBRARY - The library to link to
#  PRECOMPILED_DAWN_BINARY - The DLL or shared object file

#
# Figure out the default folder to search for libraries in
#
if ("${CMAKE_LIBRARY_ARCHITECTURE}" STREQUAL "")
    # Some platforms define CMAKE_LIBRARY_ARCHITECTURE, some don't, so we'll
    # have to make one up in that case.
    if ("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "")
        message(FATAL_ERROR "CMAKE_SYSTEM_PROCESSOR is null")
    endif()
    set(_PRECOMPILED_DAWN_ARCH "${CMAKE_SYSTEM_PROCESSOR}-${CMAKE_SYSTEM_NAME}")
else()
    set(_PRECOMPILED_DAWN_ARCH "${CMAKE_LIBRARY_ARCHITECTURE}")
endif()
string(TOLOWER "${_PRECOMPILED_DAWN_ARCH}" _PRECOMPILED_DAWN_ARCH)

string(TOLOWER "${CMAKE_SYSTEM_NAME}" _PRECOMPILED_DAWN_SYSTEM_NAME)
string(TOLOWER "${CMAKE_SYSTEM_PROCESSOR}" _PRECOMPILED_DAWN_SYSTEM_PROCESSOR)
string(TOLOWER "${CMAKE_MSVC_RUNTIME_LIBRARY}" _PRECOMPILED_DAWN_RUNTIME_LIBRARY)

set(PRECOMPILED_DAWN_LIBRARY_NAME "webgpu_dawn" CACHE STRING
    "The webgpu_dawn library name")
set(PRECOMPILED_DAWN_SYSTEM_NAME "${_PRECOMPILED_DAWN_SYSTEM_NAME}" CACHE STRING
    "The target system name")
set(PRECOMPILED_DAWN_SYSTEM_PROCESSOR "${_PRECOMPILED_DAWN_SYSTEM_PROCESSOR}" CACHE STRING
    "The target system processor")
set(PRECOMPILED_DAWN_RUNTIME_LIBRARY "${_PRECOMPILED_DAWN_RUNTIME_LIBRARY}" CACHE STRING
    "The target MSVC runtime library (Windows only)")

if ("${PRECOMPILED_DAWN_SYSTEM_NAME}" STREQUAL "")
    message(FATAL_ERROR "PRECOMPILED_DAWN_SYSTEM_NAME is null")
endif()
if ("${PRECOMPILED_DAWN_SYSTEM_PROCESSOR}" STREQUAL "")
    message(FATAL_ERROR "PRECOMPILED_DAWN_SYSTEM_PROCESSOR is null")
endif()

set(PRECOMPILED_DAWN_LIBDIR_BASE "${PRECOMPILED_DAWN_SYSTEM_NAME}/lib/${PRECOMPILED_DAWN_SYSTEM_PROCESSOR}")
set(PRECOMPILED_DAWN_BINDIR_BASE "${PRECOMPILED_DAWN_SYSTEM_NAME}/bin/${PRECOMPILED_DAWN_SYSTEM_PROCESSOR}")
set(PRECOMPILED_DAWN_INCLUDEDIR_BASE "${PRECOMPILED_DAWN_SYSTEM_NAME}/include")

if (WIN32)
    if ("${PRECOMPILED_DAWN_RUNTIME_LIBRARY}" STREQUAL "")
        message(FATAL_ERROR "PRECOMPILED_DAWN_RUNTIME_LIBRARY is null")
    endif()
    set(PRECOMPILED_DAWN_LIBDIR_BASE "${PRECOMPILED_DAWN_LIBDIR_BASE}/${PRECOMPILED_DAWN_RUNTIME_LIBRARY}")
    set(PRECOMPILED_DAWN_BINDIR_BASE "${PRECOMPILED_DAWN_BINDIR_BASE}/${PRECOMPILED_DAWN_RUNTIME_LIBRARY}")
endif()

#
# Set up find_package
#
set(PRECOMPILED_DAWN_ROOT "${CMAKE_CURRENT_LIST_DIR}" CACHE STRING
    "The path to the precompiled Dawn installation")

find_library(
    PRECOMPILED_DAWN_LIBRARY
    NAMES
        ${PRECOMPILED_DAWN_LIBRARY_NAME}
    HINTS
        ${PRECOMPILED_DAWN_ROOT}/${PRECOMPILED_DAWN_LIBDIR_BASE}
)

find_library(
    PRECOMPILED_DAWN_BINARY
    NAMES
        ${PRECOMPILED_DAWN_LIBRARY_NAME}
    HINTS
        ${PRECOMPILED_DAWN_ROOT}/${PRECOMPILED_DAWN_BINDIR_BASE}
        ${PRECOMPILED_DAWN_ROOT}/${PRECOMPILED_DAWN_LIBDIR_BASE}
)

find_path(
    PRECOMPILED_DAWN_INCLUDEDIR webgpu/webgpu.h
    HINTS
        ${PRECOMPILED_DAWN_ROOT}/${PRECOMPILED_DAWN_INCLUDEDIR_BASE}
)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(
    PrecompiledDawn
    DEFAULT_MSG
    PRECOMPILED_DAWN_LIBRARY
    PRECOMPILED_DAWN_BINARY
    PRECOMPILED_DAWN_INCLUDEDIR
)

mark_as_advanced(
    PRECOMPILED_DAWN_INCLUDEDIR
    PRECOMPILED_DAWN_LIBRARY
    PRECOMPILED_DAWN_BINARY
)

# Pluralize (to be conformant with expectations)
set(PRECOMPILED_DAWN_LIBRARIES ${PRECOMPILED_DAWN_LIBRARY} )
set(PRECOMPILED_DAWN_INCLUDE_DIRS ${PRECOMPILED_DAWN_INCLUDEDIR})

# Create a target to link with
add_library(PrecompiledDawn INTERFACE)
target_include_directories(PrecompiledDawn INTERFACE
    ${PRECOMPILED_DAWN_INCLUDE_DIRS})
target_link_libraries(PrecompiledDawn INTERFACE
    ${PRECOMPILED_DAWN_LIBRARIES})
